{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Webdev\\\\nextjs-practice\\\\pages\\\\index.jsx\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst HomePage = ({\n  meetups\n}) => {\n  console.log(meetups);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}; // export async function getServerSideProps(context) {\n// \t// fetch whatever, always ran on server never on client\n// \t// you really only need to use this function over getStaticProps if you need access to the req/res or you truly have data updating multiple times every second\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY,\n// \t\t},\n// \t};\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  // anything you want, this function never runs on the client machine, only during build\n  // always return object in getStaticProps\n  const client = await MongoClient.connect(`mongodb+srv://${process.env.MONGO_USERNAME}:${process.env.MONGO_PASS}@nextjs-practice.7mziiho.mongodb.net/?retryWrites=true&w=majority`);\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const allMeetups = await collection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: allMeetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    // updates every 10 seconds if there is new data coming in\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["E:/Webdev/nextjs-practice/pages/index.jsx"],"names":["MeetupList","MongoClient","HomePage","meetups","console","log","getStaticProps","client","connect","process","env","MONGO_USERNAME","MONGO_PASS","db","collection","allMeetups","find","toArray","close","props","map","meetup","title","address","image","description","id","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACC;AAAA,2BACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CAPD,C,CASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeG,cAAf,GAAgC;AACtC;AACA;AACA;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,iBAAgBC,OAAO,CAACC,GAAR,CAAYC,cAAe,IAAGF,OAAO,CAACC,GAAR,CAAYE,UAAW,mEADlD,CAArB;AAIA,QAAMC,EAAE,GAAGN,MAAM,CAACM,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMC,UAAU,GAAG,MAAMD,UAAU,CAACE,IAAX,GAAkBC,OAAlB,EAAzB;AAEAV,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNhB,MAAAA,OAAO,EAAEY,UAAU,CAACK,GAAX,CAAgBC,MAAD,KAAa;AACpCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADsB;AAEpCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFoB;AAGpCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHsB;AAIpCC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJgB;AAKpCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AALgC,OAAb,CAAf;AADH,KADD;AAUN;AACAC,IAAAA,UAAU,EAAE;AAXN,GAAP;AAaA;AAED,eAAe3B,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst HomePage = ({ meetups }) => {\r\n\tconsole.log(meetups);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MeetupList meetups={meetups} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n// \t// fetch whatever, always ran on server never on client\r\n// \t// you really only need to use this function over getStaticProps if you need access to the req/res or you truly have data updating multiple times every second\r\n// \tconst req = context.req;\r\n// \tconst res = context.res;\r\n\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tmeetups: DUMMY,\r\n// \t\t},\r\n// \t};\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n\t// fetch data from API\r\n\t// anything you want, this function never runs on the client machine, only during build\r\n\t// always return object in getStaticProps\r\n\tconst client = await MongoClient.connect(\r\n\t\t`mongodb+srv://${process.env.MONGO_USERNAME}:${process.env.MONGO_PASS}@nextjs-practice.7mziiho.mongodb.net/?retryWrites=true&w=majority`\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst collection = db.collection('meetups');\r\n\r\n\tconst allMeetups = await collection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: allMeetups.map((meetup) => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tdescription: meetup.description,\r\n\t\t\t\tid: meetup._id.toString(),\r\n\t\t\t})),\r\n\t\t},\r\n\t\t// updates every 10 seconds if there is new data coming in\r\n\t\trevalidate: 10,\r\n\t};\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}